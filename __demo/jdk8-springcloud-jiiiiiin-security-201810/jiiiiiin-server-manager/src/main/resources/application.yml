#spring.profiles.active=test或者pro 来控制加载哪个环境的配置,完整命令如下:
#java -jar xxxxx.jar --spring.profiles.active=test  表示加载测试环境的配置
#java -jar xxxxx.jar --spring.profiles.active=pro  表示加载生产环境的配置

#查看springboot开启了哪些配置
debug: false

server:
  port: 9090
  context-path: /mng

spring:
  profiles:
    active: dev
  thymeleaf:
    cache: false
    # 避免Thymeleaf对html语法检查过严 https://www.jianshu.com/p/b361a6acbe0c
    mode: LEGACYHTML5
  # 使用`jiiiiiin-security-browser`模块需开启
  session:
    store-type: redis
  # https://segmentfault.com/a/1190000013269653
  cache:
    # 缓存的技术类型
    ehcache:
      config: 'classpath:def-ehcache-config.xml'
    type: ehcache
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    # host: localhost
    # Redis服务器连接端口
    # port: 6379
    pool:
      # 连接池最大连接数（使用负值表示没有限制）
      max-active: 8
      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1
      # 连接池中的最大空闲连接
      max-idle: 8
      # 连接池中的最小空闲连接
      min-idle: 0
    # 连接超时时间（毫秒）
    timeout: 0
  datasource:
    # 参考：https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter
    druid:
      # 数据库访问配置, 使用druid数据源
      type: com.alibaba.druid.pool.DruidDataSource
      # 连接池配置
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 连接等待超时时间
      max-wait: 30000
      # 配置检测可以关闭的空闲连接间隔时间
      time-between-eviction-runs-millis: 60000
      # 配置连接在池中的最小生存时间
      min-evictable-idle-time-millis: 300000
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 配置监控统计拦截的filters, 去掉后监控界面sql无法统计, 'wall'用于防火墙
      filters: stat,wall,log4j
      # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
      aop-patterns: cn.jiiiiiin.module.*.service.*
      # WebStatFilter配置
      web-stat-filter:
        enabled: true
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤的格式
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'

      # StatViewServlet配置
      stat-view-servlet:
        enabled: true
        # 访问路径为/druid时，跳转到StatViewServlet
        url-pattern: /druid/*
        # 是否能够重置数据
        reset-enable: false
        # 需要账号密码才能访问控制台
        login-username: druid
        login-password: druid123
        # IP白名单
        allow: 127.0.0.1
        #　IP黑名单（共同存在时，deny优先于allow）
        deny: 192.168.1.218

      # 配置StatFilter
      filter:
        stat:
          log-slow-sql: true

mybatis-plus:
  #Mapper.xml所在的位置
  mapper-locations: classpath:/mapper/*/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: cn.jiiiiiin.module.common.entity
  type-aliases-super-type: cn.jiiiiiin.data.orm.entity.BaseEntity
  typeEnumsPackage: cn.jiiiiiin.module.common.enums.*
  global-config:
    db-config:
        id-type: id_worker
    #刷新mapper 调试神器
    refresh: true
    sql-parser-cache: false
  executor-type: reuse
  # 原生配置
  configuration:
    map-underscore-to-camel-case: true
    #开启MyBatis的二级缓存
    cache-enabled: true

# 自定义配置
jiiiiiin:
  security:
    validate:
      image-code:
        length: 3
        size: 30
        interceptor-urls: ${server.context-path}/authentication/form,${server.context-path}/authentication/mobile
    browser:
      sign-up-url: /signUp.html
      sign-out-url: /signOut.html
      # proxy-uri: http://www.pinzhi365.com

#manager:
---

spring:
  profiles: dev
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/vplusdb?&useUnicode=true&characterEncoding=utf8&autoReconnect=true&failOverReadOnly=false
    username: vplus
    password: 1qaz@WSX
  # 配置redis链接地址
  redis:
    host: 127.0.0.1
    port: 6379

logging:
  level:
    # 配置日志输出级别以观察SQL的执行情况
    com:
      springboot:
        mapper: debug
    cn:
      jiiiiiin: debug

swagger:
  enable: true

---

spring:
  profiles: produce
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/vplusdb?&useUnicode=true&characterEncoding=utf8&autoReconnect=true&failOverReadOnly=false
    username: vplus
    password: 1qaz@WSX
  # 配置redis链接地址
  redis:
    host: 127.0.0.1
    port: 6379

logging:
  level:
    cn.jiiiiiin: info

swagger:
  enable: false