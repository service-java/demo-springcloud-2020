# 配置启动端口
server:
  port: 3001

management:
  endpoints:
    web:
      # 暴露端点
      exposure:
        # 配置暴露的端点
        include: gateway

# Spring应用（微服务）名称
spring:
  application:
    name: gateway
  cloud:
    gateway:
      routes:
        - id: user-service
          # 客户端负载均衡路由
          uri: lb://user
          # 匹配路径
          predicates:
            - Path=/user/**
#  cloud:
#    gateway:
#      routes:
#        - id: hystrix-service
#          # 转发URI
#          uri: http://localhost:6001
#          # 断言配置
#          predicates:
#            - Path=/hystrix/**
#          # 过滤器配置
#          filters:
#            - SetStatus=BAD_REQUEST


#      routes:
#        - id: user-service
#          # 转发URI
#          uri: http://localhost:6001
#          # 断言配置
#          predicates:
#            # 路径
#            - Path=/u/**
#          filters:
#            # 定义重写路径的逻辑
#            - RewritePath=/u/(?<segment>.*), /$\{segment}
#  cloud:
#    gateway:
#      routes:
#        - id: user-service
#          # 转发URI
#          uri: http://localhost:6001
#          # 断言配置
#          predicates:
#            - Path=/u/**
#          filters:
#            - StripPrefix=1

#      routes:
#        # 路由编号
#        - id: user-service
#          # 转发URI
#          uri: http://localhost:6001
#          # 断言配置
#          predicates:
#            # 路径匹配
#            - Path=/user/**
#          # 过滤器工厂
#          filters:
#            # 过滤器名称
#            - name: RequestRateLimiter
#              # 参数
#              args:
#                # 每秒发放的令牌数量
#                redis-rate-limiter.replenishRate: 2 # ①
#                # 令牌桶容量
#                redis-rate-limiter.burstCapacity: 5 # ②
#  cloud:
#    gateway:
#      routes:
#        # 路由编号
#        - id: user-service
#          # 转发URI
#          uri: http://localhost:6001
#          # 断言配置
#          predicates:
#            # 路径匹配
#            - Path=/user/**
#          # 过滤器工厂
#          filters:
#            # Hystrix过滤器工厂
#            - name: Hystrix
#              # Hystrix配置参数
#              args:
#                # Hystrix命令名称
#                name: hystrix-cmd
#                # 降级服务请求路径
#                fallbackUri: forward:/gateway/fallback


#      routes:
#        # 路由编号
#        - id: user-service
#          # 转发URI
#          uri: http://localhost:6001
#          # 断言配置
#          predicates:
#            # 路径匹配
#            - Path=/hystrix/**
#          # 过滤器工厂
#          filters:
#            # 过滤器工厂名称
#            - name: Retry
#              # 配置参数（对应RetryGatewayFilterFactory.RetryConfig）
#              args:
#                # 重试次数，默认为3
#                retries: 2
#                # 对应HTTP请求方法，默认只包含GET
#                methods: GET, POST, PUT
#                # 状态限制
#                statuses: INTERNAL_SERVER_ERROR, BAD_REQUEST
#                # 系列限制
#                series: SERVER_ERROR
#      routes:
#        # 路由编号
#        - id: user-service
#          # 转发URI
#          uri: http://localhost:6001
#          # 断言配置
#          predicates:
#            # 路径匹配
#            - Path=/user/**
#          # 过滤器工厂
#          filters:
#            # AddResponseHeader过滤器工厂
#            - AddResponseHeader=token, a123456789

#      routes:
#        # 路由编号
#        - id: user-service
#          # 转发URI
#          uri: http://localhost:6001
#          # 断言配置
#          predicates:
#            # 路径匹配
#            - Path=/user/**
#            # 过滤器工厂
#          filters:
#            # 增加一个请求参数
#            - AddRequestParameter=id, 1

#      routes:
#        # 路由编号
#        - id: user-service
#          # 转发URI
#          uri: http://localhost:6001
#          # 断言配置
#          predicates:
#            # 路径匹配
#            - Path=/user/**
#          # 过滤器工厂
#          filters:
#            # 请求头参数
#            - AddRequestHeader=id, 1

#      # 开始配置路径
#      routes:
#        # 路径匹配
#        - id: fund
#          # 转发URI
#          uri: http://localhost:7001
#          # 断言配置
#          predicates:
#            # Path断言
#            - Path=/r4j/**
#            # 权重配置，第一个参数为组名，第二个参数为权重
#            - Weight=fund-group-name,80
#        # 路径匹配
#        - id: fund2
#          # 转发URI
#          uri: http://localhost:7002
#          # 断言配置
#          predicates:
#            # Path断言
#            - Path=/r4j/**
#            # 权重配置，第一个参数为组名，第二个参数为权重
#            - Weight=fund-group-name,20

#  cloud:
#    gateway:
#      # 开始配置路径
#      routes:
#        # 路径匹配
#        - id: fund
#          # 转发URI
#          uri: http://localhost:7001
#          # 断言配置
#          predicates:
#            # Path断言
#            - Path=/r4j/**
#            # RemoteAddr路由断言工厂
#            - RemoteAddr=192.168.80.0/0, 192.168.80.99/32

#      # 开始配置路径
#      routes:
#        # 路径匹配
#        - id: fund
#          # 转发URI
#          uri: http://localhost:7001
#          # 断言配置
#          predicates:
#            # Path断言
#            - Path=/r4j/**
#            # Query断言，要求存在名为“id”的请求参数，且全为数字组成  ①
#            - Query=id,^[0-9]*$
#            # Query断言，要求存在名为“id”的请求参数  ②
#            # - Query=id

#      # 开始配置路径
#      routes:
#        # 路径匹配
#        - id: user
#          # 转发URI
#          uri: http://localhost:6001
#          # 断言配置
#          predicates:
#            # Path断言
#            - Path=/user/info/{id},/user/infoes2

#      routes:
#        # 路径匹配
#        - id: fund
#          # 转发URI
#          uri: http://localhost:7001
#          # 断言配置
#          predicates:
#            # Path断言
#            - Path=/r4j/**
#            # Method断言
#            - Method=GET
#      # 开始配置路径
#      routes:
#        # 路径匹配
#        - id: fund
#          # 转发URI
#          uri: http://localhost:7001
#          # 断言配置
#          predicates:
#            # Path断言
#            - Path=/r4j/**
#            # Host断言
#            - Host=**.host.com:3001,**.myhost.com:3001

#      # 开始配置路径
#      routes:
#        # 路径匹配
#        - id: fund
#          # 转发URI
#          uri: http://localhost:7001
#          # 断言配置
#          predicates:
#            # Path断言
#            - Path=/r4j/**
#            # 请求头断言
#            - Header=id, ^[0-9]*$
#      # 开始配置路径

#      routes:
#        # 路径匹配
#        - id: fund
#          # 转发URI
#          uri: http://localhost:7001
#          # 断言配置
#          predicates:
#            # Path断言
#            - Path=/r4j/**
#            # Cookie断言
#            - Cookie=cookies_id,abcd.*

#      # 开始配置路径
#      routes:
#        # 路径匹配
#        - id: fund
#          # 转发URI
#          uri: http://localhost:7001
#          # 断言配置
#          predicates:
#            # Path断言
#            - Path=/r4j/**
#            # Between断言配置
#            - Between=2020-04-04T17:41:12.1947314+08:00[Asia/Shanghai],2020-04-04T17:43:12.1977221+08:00[Asia/Shanghai]

#      routes:
#        # 路径匹配
#        - id: fund
#          # 转发URI
#          uri: http://localhost:7001
#          # 断言配置
#          predicates:
#            - Path=/r4j/**
#            # After断言
#            - After=2020-04-04T17:38:39.2091586+08:00[Asia/Shanghai]
#      # 开始配置路径

#      routes:
#        # 路径匹配
#        - id: fund
#          # 转发URI
#          uri: http://localhost:7001
#          # 断言配置
#          predicates:
#            - Path=/r4j/** # 路径匹配
#            - Before=2020-04-04T17:28:34.6143225+08:00[Asia/Shanghai]
#        # 路径匹配
#        - id: fund
#          # 转发URI
#          uri: http://localhost:7001
#          # 断言配置
#          predicates:
#            - Path=/r4j/**

#  redis:
#    # Redis服务器
#    host: 192.168.80.130
#    # Redis密码
#    password: abcdefg
#    # Lettuce客户端配置
#    lettuce:
#      pool:
#        # 最大活动数
#        max-active: 20
#        # 最大等待时间
#        max-wait: 2000ms
#        # 最小空闲数
#        min-idle: 10
#        # 最大空闲数
#        max-idle: 15


# resilience4j配置
resilience4j:
  # 限速器注册机
  ratelimiter:
    limiters:
      # 名称为user的限速器
      user:
        # 时间戳内限制通过的请求数，默认为50
        limitForPeriod: 3
        # 配置时间戳（单位毫秒），默认值为500 ns
        limitRefreshPeriodInMillis: 5000
        # 超时时间
        timeoutInMillis: 10

# 请求URL指向Eureka服务治理中心
eureka:
  client:
    serviceUrl:
      defaultZone : http://localhost:5001/eureka/,http://localhost:5002/eureka/

logging:
  level:
    root: INFO

